install.packages("phangorn")
read.phyDat(Homox, format = "fasta")
Homos_phyDat <- msaConvert(Homos, type="phangorn::phyDat")
Homox_phyDat <- msaConvert(Homos, type="phangorn::phyDat")
#Ahora aplicamos msa y asigmanos la nueva valiable (opte por la misma)
Homos <- msa(Homos)
Homox_phyDat <- msaConvert(Homos, type="phangorn::phyDat")
Homox_phyDat
Homox_phyDat <- msaConvert(Mutantx, type="phangorn::phyDat")
print(Mutantx)
write.fasta(Mutantx, Bioinfomatics Eli, open = "w", nbchar = 60, as.string = FALSE)
write.fasta("Mutantx", "Bioinfomatics Eli", open = "w", nbchar = 60, as.string = FALSE)
write.fasta("Mutantx",nbchar = 60, as.string = FALSE)
install.packages("seqinr")
library(seqinr)
write.fasta(Mutantx)
write.fasta(Mutantx,"Users/MariaGarcia/Downloads/Bioinformatics Eli")
write.fasta("Mutantx","Users/MariaGarcia/Downloads/Bioinformatics Eli")
write.fasta(names="Mutantx", sequences=Mutantx, file.out="Mutant.fasta")
Mutantxx <- readDNAStringSet("Mutant.fasta")
Mutant.fasta
Mutantxxx <- read.alignment(Mutant.fasta)
read.alignment(Mutant.fasta)
Mutantx
# Homo_sapiens 6 is the subject that appears to present the majority of mutations in which nucleotides have been replaced in various locations throughout the alignment.
#ran Blast for Homo 6 - Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
Mutant <-("seqdump.txt")
# Homo_sapiens 6 is the subject that appears to present the majority of mutations in which nucleotides have been replaced in various locations throughout the alignment.
#ran Blast for Homo 6 - Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
Mutant <-("seqdump.txt")
names(seqs) <-("AY356351.1 Homo sapiens mutant")
Mutant <- msa(seqs)
print(Mutantx)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names="Mutantx", sequences=Mutantx, file.out="Mutant.fasta")
#With this following function we can determine the length of our sequence (result = 642)
nchar(Homos)
Mutantx <- msa(seqs)
print(Mutantx)
print(Mutantx)
Mutant <- msa(seqs)
print(Mutantx)
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
Mutant <-("seqdump.txt")
Mutant <- msa(seqs)
print(Mutantx)
Mutantx <- Biostrings::translate(Mutant)
Mutant <-readDNAStringSet("seqdump.txt")
Mutantx <- Biostrings::translate(Mutant)
print(Mutantx)
Mutant <- msa(seqs)
Mutant <- msa(seqs)
Mutant <-readDNAStringSet("seqdump.txt")
Mutant.seqinr <- Biostrings::translate(Mutant)
Mutantx <- Biostrings::translate(Mutant)
print(Mutantx)
#Then I named the sequences that are already grouped. In this case I opted for "Homos" since the sequences correspond to a sample of 20 humans.
Homos <- readDNAStringSet("sequences.fasta Midterm.fasta")
#With this following function we can determine the length of our sequence (result = 642)
nchar(Homos)
#Use these functions to observe my alignment so I can complete step 2 of the Homework
print(Homos, show="complete")
alFreq
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
Mutant <-("seqdump.txt")
names(seqs) <-("AY356351.1 Homo sapiens mutant")
Mutant <- msa(seqs)
Mutant <-readDNAStringSet("seqdump.txt")
Mutant.seqinr <- Biostrings::translate(Mutant)
print(Mutantx)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names="Mutantx", sequences=Mutantx, file.out="Mutant.fasta")
names(seqs) <-("AY356351.1 Homo sapiens mutant")
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
seqs
Mutant
?names(seqs)
Mutant <- msa(seqs)
names(Homos) <-("AY356351.1 Homo sapiens mutant")
Mutant <- msa(seqs)
Mutant <-readDNAStringSet("seqdump.txt")
Mutantx <- Biostrings::translate(Mutant)
print(Mutantx)
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
seqs
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
Homos
names(Homos) <-("AY356351.1 Homo sapiens mutant")
Mutant <- msa(seqs)
Mutant <-readDNAStringSet("seqdump.txt")
Mutant.seqinr <- Biostrings::translate(Mutant)
Mutantx <- Biostrings::translate(Mutant)
print(Mutantx)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names="Mutantx", sequences=Mutantx, file.out="Mutant.fasta")
#Use these functions to observe my alignment so I can complete step 2 of the Homework
print(Homos, show="complete")
alFreq <- alphabetFrequency(Homos)
alFreq
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
Mutant <-("seqdump.txt")
names(Homos) <-("AY356351.1 Homo sapiens mutant")
Mutant <- msa(seqs)
Mutant <-readDNAStringSet("seqdump.txt")
Mutant.seqinr <- Biostrings::translate(Mutant)
Mutantx <- Biostrings::translate(Mutant)
print(Mutantx)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names="Mutantx", sequences=Mutantx, file.out="Mutant.fasta")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names="Mutantx", sequences=Mutantx, file.out="Mutant.fastaX")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names="Mutantx", "sequences=Mutantx", file.out="Mutant.fastaX")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names="Mutantx", sequences="Mutantx", file.out="Mutant.fastaX")
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
? write.fasta
write.fasta(sequences="Mutantx", names="Mutantx", file.out="Mutantx")
#Then I named the sequences that are already grouped. In this case I opted for "Homos" since the sequences correspond to a sample of 20 humans.
Homos <- readDNAStringSet("sequences.fasta Midterm.fasta")
#Now we apply msa and assign the new variable (opted for the same name)
Homos <- msa(Homos)
#With this following function we can determine the length of our sequence (result = 642)
nchar(Homos)
#Use these functions to observe my alignment so I can complete step 2 of the Homework
print(Homos, show="complete")
alFreq <- alphabetFrequency(Homos)
alFreq
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
Mutant <-("seqdump.txt")
names(Homos) <-("AY356351.1 Homo sapiens mutant")
alFreq <- alphabetFrequency(Homos)
alFreq
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
Mutant <-("seqdump.txt")
names(Homos) <-("AY356351.1 Homo sapiens mutant")
names(seqs) <-("AY356351.1 Homo sapiens mutant")
Mutant <- msa(seqs)
Mutant <-readDNAStringSet("seqdump.txt")
Mutant.seqinr <- Biostrings::translate(Mutant)
Mutantx <- Biostrings::translate(Mutant)
print(Mutantx)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names="Mutantx", sequences="Mutantx", file.out="Mutant.fastaX")
names(Homos) <-("AY356351.1 Homo sapiens mutant")
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
Mutant <-("seqdump.txt")
names(Homos) <-("AY356351.1 Homo sapiens mutant")
names(Mutant) <-("AY356351.1 Homo sapiens mutant")
Mutant <- msa(Mutant)
Mutant <- msa(Mutant)
Mutant
#First we configure the working directory in the folder that contains our data
setwd("c:Users/MariaGarcia/Downloads/Bioinformatics Eli")
#First we configure the working directory in the folder that contains our data
setwd("c:/Users/MariaGarcia/Downloads/Bioinformatics Eli")
#First we configure the working directory in the folder that contains our data
setwd("C:/Users/MariaGarcia/Downloads/Bioinformatics Eli")
#First we configure the working directory in the folder that contains our data
setwd("/Users/MariaGarcia/Downloads/Bioinformatics Eli")
#Then I named the sequences that are already grouped. In this case I opted for "Homos" since the sequences correspond to a sample of 20 humans.
Homos <- readDNAStringSet("sequences.fasta Midterm.fasta")
#Now we apply msa and assign the new variable (opted for the same name)
Homos <- msa(Homos)
#With this following function we can determine the length of our sequence (result = 642)
nchar(Homos)
#Use these functions to observe my alignment so I can complete step 2 of the Homework
print(Homos, show="complete")
alFreq
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
Mutant <-("sequence-6.fasta")
names(Mutant) <-("AY356351.1 Homo sapiens mutant")
Mutant <- msa(Mutant)
Mutant <- msa(Homos)
Mutant <- msa(Mutant)
msa?
?msa
? msa
Mutant <- msa(sequence-6.fasta)
Mutant <- msa("sequence-6.fasta")
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
Mutant <-("sequence-6.fasta")
Mutant
Mutant<- readDNAStringSet("sequences-6.fasta")
#First we configure the working directory in the folder that contains our data
setwd("/Users/MariaGarcia/Downloads/Bioinformatics Eli")
Mutant<- readDNAStringSet("sequences-6.fasta")
Mutant
Mutant<- readDNAStringSet("sequences-6.fasta")
#Then I named the sequences that are already grouped. In this case I opted for "Homos" since the sequences correspond to a sample of 20 humans.
Homos <- readDNAStringSet("sequences.fasta Midterm.fasta")
Homos
Mutant<- readDNAStringSet("Homo_sapiens_6")
#Primeramente configuramos el directorio de trabajo en la carpeta que contiene nuestros datos
setwd("Users/MariaGarcia/Downloads/Bioinformatics Eli")
#Consiguientemente le damos nombre a nuestra sequencias que ya se encuentran agrupadas. En este caso opte por "Homo" ya que nuestras sequencias corresponden a una poblacion de 20 humanos.
Homos <- readDNAStringSet("sequences.fasta Midterm.fasta")
#Primeramente configuramos el directorio de trabajo en la carpeta que contiene nuestros datos
setwd("Users/MariaGarcia/Downloads/Bioinformatics Eli")
#Primeramente configuramos el directorio de trabajo en la carpeta que contiene nuestros datos
setwd("/Users/MariaGarcia/Downloads/Bioinformatics Eli")
#Consiguientemente le damos nombre a nuestra sequencias que ya se encuentran agrupadas. En este caso opte por "Homo" ya que nuestras sequencias corresponden a una poblacion de 20 humanos.
Homos <- readDNAStringSet("sequences.fasta Midterm.fasta")
#Ahora aplicamos msa y asigmanos la nueva valiable (opte por la misma)
Homos <- msa(Homos)
#Con esta siguiente funcion podemos determinar la longitud de nuestra sequencia (resultado = 642)
nchar(Homos)
#Utilice esta funciones para observar mi alineamiento y asi poder completar el paso 2 de la tarea
print(Homos, show="complete")
alFreq <- alphabetFrequency(Homos)
alFreq
# Homo_sapiens 6  es el sujeto que parece presentar la mayoria de mutaciones en los que los nucleotidos han sido reeplazados en varias localizaciones a traves del alineamiento.
#ran Blast for Homo 6 - Homo sapiens mutant hemoglobin beta chain (HBB) gene (100% adjession number)
Mutated <-readDNAStringSet("sequence-7.fasta")
# Homo_sapiens 6  es el sujeto que parece presentar la mayoria de mutaciones en los que los nucleotidos han sido reeplazados en varias localizaciones a traves del alineamiento.
#ran Blast for Homo 6 - Homo sapiens mutant hemoglobin beta chain (HBB) gene (100% adjession number)
setwd("/Users/MariaGarcia/Downloads")
Mutated <-readDNAStringSet("sequence-7.fasta")
names(Mutanted) <-("AY356351.1 Homo sapiens mutant")
names(Mutated) <-("AY356351.1 Homo sapiens mutant")
Mutated<- msa("sequence-7.fasta")
DNA <- msa("sequence-7.fasta")
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
Mutant <-("sequence-6.fasta")
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
setwd("/Users/MariaGarcia/Downloads")
Mutant <- readDNAStringSet("sequences-7.fasta")
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
setwd("/Users/MariaGarcia/Downloads")
Mutant <- readDNAStringSet("sequence-7.fasta")
MutantX <- msa("sequence-6.fasta")
? msa
Mutant <- DNAStringSet msa ("sequence-6.fasta")
Mutant <- msa(DNAStringSet("sequence-7.fasta"))
Mutant <- DNAStringSet("sequence-7.fasta")
Mutant <- DNAStringSet("sequence-7.fasta")
Mutant <- readDNAStringSet("sequence-7.fasta")
Mutant.seqinr <- Biostrings::translate(Mutant)
print(Mutantx)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names="Mutantx", sequences="Mutantx", file.out="Mutant.fastaX")
#First we configure the working directory in the folder that contains our data
setwd("/Users/MariaGarcia/Downloads/Bioinformatics Eli")
#Then I named the sequences that are already grouped. In this case I opted for "Homos" since the sequences correspond to a sample of 20 humans.
Homos <- readDNAStringSet("sequences.fasta Midterm.fasta")
#Now we apply msa and assign the new variable (opted for the same name)
Homos <- msa(Homos)
#With this following function we can determine the length of our sequence (result = 642)
nchar(Homos)
#Use these functions to observe my alignment so I can complete step 2 of the Homework
print(Homos, show="complete")
alFreq <- alphabetFrequency(Homos)
alFreq
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
setwd("/Users/MariaGarcia/Downloads")
Mutant <- readDNAStringSet("sequence-7.fasta")
Mutant.seqinr <- Biostrings::translate(Mutant)
Mutantx <- Biostrings::translate(Mutant)
print(Mutantx)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names="Mutantx", sequences="Mutantx", file.out="Mutant.fastaX")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
Mutantx_phyDat <- msaConvert(Mutantx, type="phangorn::phyDat")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
Mutantx_phyDat <- msaConvert("Mutantx")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.phyDat(Mutantx_phyDat, "Bioinformatics Eli", format = "fasta")
install.packages("phangorn")
library(phangorn)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.phyDat(Mutantx_phyDat, "Bioinformatics Eli", format = "fasta")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.phyDat(Mutantx, "Bioinformatics Eli", format = "fasta")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.phyDat(Mutantx, "Midterm", format = "fasta")
write.phyDat(Mutantx, "Midterm", format = "fasta")
write.phyDat("Mutantx", "MutantGene", format = "fasta")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.phyDat(Mutantx, "Midterm", format = "fasta")
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
setwd("/Users/MariaGarcia/Downloads")
Mutant <- readDNAStringSet("sequence-7.fasta")
Mutant.seqinr <- Biostrings::translate(Mutant)
Mutantx <- Biostrings::translate(Mutant)
print(Mutantx)
? write.phyDat()
Mutantx
write.phyDat("Mutantx", format = "fasta")
write.phyDat(file= "Mutantx", MutanGene, format = "fasta")
write.phyDat( "MutantGene", file= "Mutantx", format = "fasta")
write.phyDat( file= "Mutantx", "Mutantx", format = "fasta")
Mutantx_phyDat <- msaConvert(Mutantx, type="phangorn::phyDat")
phangorn::phyDat("Mutantx")
write.phyDat( file= "Mutantx", "Mutantx", format = "fasta")
write.phyDat( file= "Muuutantx", "Mutantx", format = "fasta")
? phyDat
s.phyDat("Mutantx", type = "DNA")
phyDat("Mutantx", type = "DNA")
Mutantx
Mutantx_phyDat <- msaConvert(Mutantx, type="phangorn::phyDat")
write.phyDat( file= "Muuutantx", "Mutantx", format = "fasta")
write.FASTA ?
write.FASTA ?
? write.FASTA
write.FASTA(file = Mutantx, Mutanx, Mutantx)
write.FASTA(Mutantx, Mutanx, Mutantx)
write.fasta
write.fasta ?
write.fasta ?
write.FASTA(Mutantx, file = Mutantx, header = NULL, append = FALSE)
write.FASTA(Mutantx, file = Mutantx, header = NULL, append = FALSE)
write.FASTA (Mutantx, file = Mutantx, header = NULL, append = FALSE)
phyDat(Mutant, type = "DNA", levels = NULL, return.index = TRUE)
phyDat(Mutant, type = "DNA", levels = NULL, return.index = FALSE)
phyDat(Mutant, type = "DNA", return.index = FALSE)
print(Mutantx)
write.fasta(Mutantx, Mutantx, Mutantx, open = "w", nbchar = 60, as.string = FALSE)
install.packages(c("boot", "callr", "DBI", "igraph", "magick", "segmented", "survival"))
readBStringSet(Mutantx, format="fasta",
nrec=-1L, skip=0L, seek.first.rec=FALSE,
use.names=TRUE, with.qualities=FALSE)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.phyDat(Mutantx, "Midterm", format = "fasta")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
Mutantg <- write.phyDat(Mutantx, "Midterm", format = "fasta")
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
Muntantg
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
Mutantg <- write.phyDat(Mutantx, "Midterm", format = "fasta")
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
Mutantg
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
Mutantx <- write.phyDat(Mutantx, "Midterm", format = "fasta")
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
Mutantx
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
library(tidyr)
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
library(dplyr)
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
library(seqinr)
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
library(Biostrings)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names ="Mutantx", sequences="Mutantx", file.out="Mutant.fastaX")
Mutantx
Mutant.seqinr <- Biostrings::translate(Mutant)
Mutantx <- Biostrings::translate(Mutant)
print(Mutantx)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names ="Mutantx", sequences="Mutantx", file.out="Mutant.fastaX")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names ="Mutantx", sequences="Mutantx", file.out="MutantGene.fasta")
#First we configure the working directory in the folder that contains our data
setwd("/Users/MariaGarcia/Downloads/Bioinformatics Eli")
#Then I named the sequences that are already grouped. In this case I opted for "Homos" since the sequences correspond to a sample of 20 humans.
Homos <- readDNAStringSet("sequences.fasta Midterm.fasta")
#Now we apply msa and assign the new variable (opted for the same name)
Homos <- msa(Homos)
#First we configure the working directory in the folder that contains our data
setwd("/Users/MariaGarcia/Downloads/Bioinformatics Eli")
#Then I named the sequences that are already grouped. In this case I opted for "Homos" since the sequences correspond to a sample of 20 humans.
Homos <- readDNAStringSet("sequences.fasta Midterm.fasta")
#Now we apply msa and assign the new variable (opted for the same name)
Homos <- msa(Homos)
#With this following function we can determine the length of our sequence (result = 642)
nchar(Homos)
#Use these functions to observe my alignment so I can complete step 2 of the Homework
print(Homos, show="complete")
alFreq <- alphabetFrequency(Homos)
alFreq
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
setwd("/Users/MariaGarcia/Downloads")
Mutant <- readDNAStringSet("sequence-7.fasta")
Mutant.seqinr <- Biostrings::translate(Mutant)
Mutantx <- Biostrings::translate(Mutant)
print(Mutantx)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(names ="Mutantx", sequences="Mutantx", file.out="MutantGene.fasta")
# I ran Blastp to search the best match for my protein sequence
#result: hemoglobin subunit beta isoform X1 [Mandrillus leucophaeus]
#Accession Number-XP_011830555.1
#After doing some research I found using GenBank that this gene is associated with sickle beta thalassaemia. Yes this individual has this genetic disease
Mutantx
Mutantx <- Biostrings::translate(MutantGene)
Mutant <- readDNAStringSet("sequence-7.fasta")
Mutant.seqinr <- Biostrings::translate(Mutant)
Mutantx <- Biostrings::translate(MutantGene)
Mutant.seqinr <- Biostrings::translate(Mutant)
MutantGene <- Biostrings::translate(Mutant)
print(MutantGene)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(sequences = "MutantGene", names = "MutantGene", file.out = "Gene.fasta")
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(sequences = MutantGene, names = MutantGene, file.out = "Mutant")
#First we configure the working directory in the folder that contains our data
setwd("/Users/MariaGarcia/Downloads/Bioinformatics Eli")
#Then I named the sequences that are already grouped. In this case I opted for "Homos" since the sequences correspond to a sample of 20 humans.
Homos <- readDNAStringSet("sequences.fasta Midterm.fasta")
#Now we apply msa and assign the new variable (opted for the same name)
Homos <- msa(Homos)
#With this following function we can determine the length of our sequence (result = 642)
nchar(Homos)
#Use these functions to observe my alignment so I can complete step 2 of the Homework
print(Homos, show="complete")
alFreq <- alphabetFrequency(Homos)
alFreq
#Homo_sapiens 6 is the subject that appears to present mutations. Nucleotides have been replaced in various locations throughout the alignment.
#I ran Blast for Homo 6
#Result- Homo sapiens mutant hemoglobin beta chain (HBB) gene
#Accession number-AY356351.1
#Here I am translating the Homo 6 sequence into protein
setwd("/Users/MariaGarcia/Downloads")
Mutant <- readDNAStringSet("sequence-7.fasta")
Mutant.seqinr <- Biostrings::translate(Mutant)
MutantGene <- Biostrings::translate(Mutant)
print(MutantGene)
#Here I am printing the translated sequence into a fasta file which i saved to my Bioinformatics folder
write.fasta(sequences = MutantGene, names = MutantGene, file.out = "Mutant")
